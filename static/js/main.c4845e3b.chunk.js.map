{"version":3,"sources":["components/Search/Search.jsx","components/Employee/Employee.jsx","utils/API.js","containers/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","type","name","placeholder","onChange","Employee","alt","src","picture","thumbnail","first","last","phone","email","axios","get","Home","useState","employee","setEmployee","search","setSearch","useEffect","API","then","res","data","results","catch","err","console","log","id","event","value","target","class","onClick","sortedEmployee","sort","a","b","direction","filter","toLowerCase","includes","map","login","uuid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAoBeA,EAlBA,SAACC,GACd,OACE,mCACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,kBACVC,KAAK,OACLC,KAAK,SACLC,YAAY,SACZC,SAAUL,EAAMK,kBCObC,EAjBE,SAACN,GAChB,OACE,mCACE,+BACE,6BACE,qBAAKO,IAAI,iBAAiBC,IAAKR,EAAMS,QAAQC,cAE/C,+BACGV,EAAMG,KAAKQ,MADd,IACsBX,EAAMG,KAAKS,QAEjC,6BAAKZ,EAAMa,QACX,6BAAKb,EAAMc,c,iBCPJ,EACA,WACX,OAAOC,IAAMC,IALf,oFCiGaC,G,MA9FF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAEVG,EAFU,KAEFC,EAFE,KAKjBC,qBAAU,WACRC,IACGC,MAAK,SAACC,GACLN,EAAYM,EAAIC,KAAKC,YAEtBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAsBH,OACE,qCAEE,yBAAS7B,UAAU,mCAAmCgC,GAAG,SAAzD,SACE,sBAAKhC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAQgC,GAAG,WAAzB,gCACA,oBAAIhC,UAAU,WAAd,0GAKA,qBAAKA,UAAU,YAAYgC,GAAG,SAA9B,SACE,cAAC,EAAD,CAAQ5B,SA/BQ,SAAC6B,GACzB,IAAIC,EAAQD,EAAME,OAAOD,MACzBb,EAAUa,IA6BmCA,MAAOd,WAMlD,yBAASpB,UAAU,yBAAyBgC,GAAG,WAA/C,SACE,qBAAKhC,UAAU,kBAAf,SACE,wBAAOoC,MAAM,qBAAb,UACE,gCACE,+BACE,uCACA,oBAAIC,QArCS,WACzB,IACMC,EADY,YAAOpB,GACWqB,MAAK,SAACC,EAAGC,GAC3C,OAAID,EAAEtC,KAAKS,KAAO8B,EAAEvC,KAAKS,KACO,cAAvBO,EAASwB,UAA4B,GAAK,EACxCF,EAAEtC,KAAKS,KAAO8B,EAAEvC,KAAKS,KACA,eAAvBO,EAASwB,WAA8B,EAAI,EAE7C,KAETvB,EAAYmB,IA2BiCN,GAAG,WAApC,kBAGA,uCACA,4CAGJ,gCACGd,EACEyB,QACC,SAACzB,GAAD,OACEA,EAAShB,KAAKQ,MACXkC,cACAC,SAASzB,EAAOwB,gBACnB1B,EAAShB,KAAKS,KACXiC,cACAC,SAASzB,EAAOwB,gBACnB1B,EAASN,MAAMiC,SAASzB,IACxBF,EAASL,MAAM+B,cAAcC,SAASzB,EAAOwB,kBAEhDE,KAAI,SAAC5B,GAAD,OACH,cAAC,EAAD,CACEhB,KAAMgB,EAAShB,KACfU,MAAOM,EAASN,MAChBC,MAAOK,EAASL,MAChBL,QAASU,EAASV,SACbU,EAAS6B,MAAMC,uBCnFzBC,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4845e3b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = (props) => {\n  return (\n    <>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            className=\"input is-danger\"\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Search\"\n            onChange={props.onChange}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Employee = (props) => {\n  return (\n    <>\n      <tr>\n        <th>\n          <img alt=\"Employee Photo\" src={props.picture.thumbnail} />\n        </th>\n        <td>\n          {props.name.first} {props.name.last}\n        </td>\n        <td>{props.phone}</td>\n        <td>{props.email}</td>\n      </tr>\n    </>\n  );\n};\n\nexport default Employee;\n","import axios from \"axios\";\n\nconst BASEURL =\n  \"https://randomuser.me/api/?results=50&inc=login,name,phone,email,picture&nat=us\";\n\n// Export an object with a \"search\" method that searches the randomUser API\nexport default {\n  getEmployee: function () {\n    return axios.get(BASEURL);\n  },\n};\n","import React, { useEffect, useState } from \"react\";\nimport Search from \"../components/Search/Search\";\nimport Employee from \"../components/Employee/Employee\";\nimport API from \"../utils/API\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const [employee, setEmployee] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  //   api call to populate init load\n  useEffect(() => {\n    API.getEmployee()\n      .then((res) => {\n        setEmployee(res.data.results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // filter search results\n  const handleInputChange = (event) => {\n    let value = event.target.value;\n    setSearch(value);\n  };\n\n  //   sort results\n  const handleSortEmployee = () => {\n    const sortEmployee = [...employee];\n    const sortedEmployee = sortEmployee.sort((a, b) => {\n      if (a.name.last < b.name.last) {\n        return employee.direction === \"ascending\" ? 1 : -1;\n      } else if (a.name.last > b.name.last) {\n        return employee.direction === \"descending\" ? -1 : 1;\n      }\n      return 0;\n    });\n    setEmployee(sortedEmployee);\n  };\n\n  return (\n    <>\n      {/* HEADER */}\n      <section className=\"hero is-danger has-text-centered\" id=\"header\">\n        <div className=\"container\">\n          <h1 className=\"title\" id=\"headline\">Employee Directory</h1>\n          <h2 className=\"subtitle\">\n            Use the search field below to filter through employees and click\n            name to sort alphabetically\n          </h2>\n          {/* SEARCH */}\n          <div className=\"container\" id=\"search\">\n            <Search onChange={handleInputChange} value={search} />\n          </div>\n        </div>\n      </section>\n\n      {/* EMPLOYEE TABLE */}\n      <section className=\"hero has-text-centered\" id=\"employee\">\n        <div className=\"table-container\">\n          <table class=\"table is-fullwidth\">\n            <thead>\n              <tr>\n                <th>Photo</th>\n                <th onClick={handleSortEmployee} id=\"nameSort\">\n                  Name\n                </th>\n                <th>Phone</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n              {employee\n                .filter(\n                  (employee) =>\n                    employee.name.first\n                      .toLowerCase()\n                      .includes(search.toLowerCase()) ||\n                    employee.name.last\n                      .toLowerCase()\n                      .includes(search.toLowerCase()) ||\n                    employee.phone.includes(search) ||\n                    employee.email.toLowerCase().includes(search.toLowerCase())\n                )\n                .map((employee) => (\n                  <Employee\n                    name={employee.name}\n                    phone={employee.phone}\n                    email={employee.email}\n                    picture={employee.picture}\n                    key={employee.login.uuid}\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import Home from \"./containers/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}